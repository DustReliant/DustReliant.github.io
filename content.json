{"meta":{"title":"依尘","subtitle":"Ting 花落的声音","description":"依尘de个人展示","author":"依尘","url":"https://www.yichen.online"},"pages":[{"title":"404","date":"2019-10-28T08:41:10.000Z","updated":"2020-05-16T16:49:11.947Z","comments":true,"path":"404.html","permalink":"https://www.yichen.online/404.html","excerpt":"","text":""},{"title":"","date":"2019-12-19T04:37:07.881Z","updated":"2019-12-18T15:10:48.262Z","comments":true,"path":"baidu_verify_dn86tgnuj7.html","permalink":"https://www.yichen.online/baidu_verify_dn86tgnuj7.html","excerpt":"","text":"dn86tgnuj7"},{"title":"","date":"2020-06-08T06:47:21.999Z","updated":"2020-06-08T06:43:55.801Z","comments":true,"path":"googleef7ca859c080e6cd.html","permalink":"https://www.yichen.online/googleef7ca859c080e6cd.html","excerpt":"","text":"google-site-verification: googleef7ca859c080e6cd.html"},{"title":"分类","date":"2018-09-30T09:25:30.000Z","updated":"2020-06-03T07:24:20.276Z","comments":true,"path":"categories/index.html","permalink":"https://www.yichen.online/categories/index.html","excerpt":"","text":""},{"title":"contact","date":"2020-05-15T01:35:14.000Z","updated":"2020-05-15T10:05:27.669Z","comments":true,"path":"contact/index.html","permalink":"https://www.yichen.online/contact/index.html","excerpt":"","text":""},{"title":"_data","date":"2020-05-15T01:58:03.000Z","updated":"2020-05-15T01:58:03.924Z","comments":true,"path":"data/index.html","permalink":"https://www.yichen.online/data/index.html","excerpt":"","text":""},{"title":"天涯觅知己","date":"2020-05-15T01:34:45.000Z","updated":"2020-05-26T14:46:52.976Z","comments":true,"path":"friends/index.html","permalink":"https://www.yichen.online/friends/index.html","excerpt":"","text":""},{"title":"galleries","date":"2020-05-17T15:06:22.000Z","updated":"2020-05-17T15:06:57.446Z","comments":true,"path":"galleries/index.html","permalink":"https://www.yichen.online/galleries/index.html","excerpt":"","text":""},{"title":"我的歌单","date":"2019-05-17T08:14:00.000Z","updated":"2020-06-07T02:16:30.532Z","comments":true,"path":"music/index.html","permalink":"https://www.yichen.online/music/index.html","excerpt":"","text":"Ting 花落的声音"},{"title":"playlist","date":"2020-05-15T08:51:51.000Z","updated":"2020-05-26T13:18:02.817Z","comments":true,"path":"playlist/index.html","permalink":"https://www.yichen.online/playlist/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-09-30T10:23:38.000Z","updated":"2020-06-03T07:26:35.264Z","comments":true,"path":"tags/index.html","permalink":"https://www.yichen.online/tags/index.html","excerpt":"","text":""},{"title":"依尘","date":"2019-11-30T10:24:28.000Z","updated":"2020-10-18T13:27:44.945Z","comments":true,"path":"about/index.html","permalink":"https://www.yichen.online/about/index.html","excerpt":"","text":"个人信息 男 本科/计算机系 职业：学生 微博：@O大白菜0 技术博客：https://www.yichen.online E-mail：lijz41269@163.com QQ:1619513467 个人动力 博学而笃志，切问而近思。 三十年河西，三十年河东，莫欺少年穷。 一个有信念者所开发出的力量，大于99个只有兴趣者。 微信公众号"},{"title":"天涯觅知己","date":"2020-05-15T01:34:45.000Z","updated":"2021-05-13T05:55:41.887Z","comments":true,"path":"link/index.html","permalink":"https://www.yichen.online/link/index.html","excerpt":"","text":"个人资料 昵称：依尘 地址：https://www.yichen.online/ 头像：https://cdn.jsdelivr.net/gh/1619513467/cdn@master/a.png 简介：Ting 花落的声音"}],"posts":[{"title":"面试题汇总","slug":"面试题汇总","date":"2021-05-13T14:44:53.113Z","updated":"2021-05-13T14:42:33.377Z","comments":true,"path":"2021/05/13/面试题汇总/","link":"","permalink":"https://www.yichen.online/2021/05/13/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB/","excerpt":"","text":"前端面试题汇总[toc] Webpackwebpack与grunt、gulp的不同？三者都是前端构建工具，grunt和gulp在早期比较流行，现在webpack相对来说比较主流，不过一些轻量化的任务还是会用gulp来处理，比如单独打包CSS文件等。 grunt和gulp是基于任务和流（Task、Stream）的。类似jQuery，找到一个（或一类）文件，对其做一系列链式操作，更新流上的数据， 整条链式操作构成了一个任务，多个任务就构成了整个web的构建流程。 webpack是基于入口的。webpack会自动地递归解析入口所需要加载的所有资源文件，然后用不同的Loader来处理不同的文件，用Plugin来扩展webpack功能。 所以总结一下： 从构建思路来说 gulp和grunt需要开发者将整个前端构建过程拆分成多个Task，并合理控制所有Task的调用关系 webpack需要开发者找到入口，并需要清楚对于不同的资源应该使用什么Loader做何种解析和加工 对于知识背景来说 gulp更像后端开发者的思路，需要对于整个流程了如指掌 webpack更倾向于前端开发者的思路 与webpack类似的工具还有哪些？谈谈你为什么最终选择（或放弃）使用webpack？同样是基于入口的打包工具还有以下几个主流的： webpack rollup parcel 从应用场景上来看： webpack适用于大型复杂的前端站点构建 rollup适用于基础库的打包，如vue、react parcel适用于简单的实验性项目，他可以满足低门槛的快速看到效果 由于parcel在打包过程中给出的调试信息十分有限，所以一旦打包出错难以调试，所以不建议复杂的项目使用parcel 有哪些常见的Loader？他们是解决什么问题的？ file-loader：把文件输出到一个文件夹中，在代码中通过相对 URL 去引用输出的文件 url-loader：和 file-loader 类似，但是能在文件很小的情况下以 base64 的方式把文件内容注入到代码中去 source-map-loader：加载额外的 Source Map 文件，以方便断点调试 image-loader：加载并且压缩图片文件 babel-loader：把 ES6 转换成 ES5 css-loader：加载 CSS，支持模块化、压缩、文件导入等特性 style-loader：把 CSS 代码注入到 JavaScript 中，通过 DOM 操作去加载 CSS。 eslint-loader：通过 ESLint 检查 JavaScript 代码 有哪些常见的Plugin？他们是解决什么问题的？ define-plugin：定义环境变量 commons-chunk-plugin：提取公共代码 uglifyjs-webpack-plugin：通过UglifyES压缩ES6代码 webpack 中 loader 和 plugin 的区别是什么不同的作用 Loader直译为”加载器”。Webpack将一切文件视为模块，但是webpack原生是只能解析js文件，如果想将其他文件也打包的话，就会用到loader。 所以Loader的作用是让webpack拥有了加载和解析非JavaScript文件的能力。 Plugin直译为”插件”。Plugin可以扩展webpack的功能，让webpack具有更多的灵活性。 在 Webpack 运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。 不同的用法 Loader在module.rules中配置，也就是说他作为模块的解析规则而存在。 类型为数组，每一项都是一个Object，里面描述了对于什么类型的文件（test），使用什么加载(loader)和使用的参数（options） Plugin在plugins中单独配置。 类型为数组，每一项是一个plugin的实例，参数都通过构造函数传入。 webpack的构建流程是什么?从读取配置到输出文件这个过程尽量说全Webpack 的运行流程是一个串行的过程，从启动到结束会依次执行以下流程： 初始化参数：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数； 开始编译：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，执行对象的 run 方法开始执行编译； 确定入口：根据配置中的 entry 找出所有的入口文件； 编译模块：从入口文件出发，调用所有配置的 Loader 对模块进行翻译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理； 完成模块编译：在经过第4步使用 Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系； 输出资源：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 Chunk，再把每个 Chunk 转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会； 输出完成：在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统。 在以上过程中，Webpack 会在特定的时间点广播出特定的事件，插件在监听到感兴趣的事件后会执行特定的逻辑，并且插件可以调用 Webpack 提供的 API 改变 Webpack 的运行结果。 是否写过Loader和Plugin？描述一下编写loader或plugin的思路？Loader像一个”翻译官”把读到的源文件内容转义成新的文件内容，并且每个Loader通过链式操作，将源文件一步步翻译成想要的样子。 编写Loader时要遵循单一原则，每个Loader只做一种”转义”工作。 每个Loader的拿到的是源文件内容（source），可以通过返回值的方式将处理后的内容输出，也可以调用this.callback()方法，将内容返回给webpack。 还可以通过 this.async()生成一个callback函数，再用这个callback将处理后的内容输出出去。 此外webpack还为开发者准备了开发loader的工具函数集——loader-utils。 相对于Loader而言，Plugin的编写就灵活了许多。 webpack在运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。 是否写过Loader和Plugin？描述一下编写loader或plugin的思路？Loader像一个”翻译官”把读到的源文件内容转义成新的文件内容，并且每个Loader通过链式操作，将源文件一步步翻译成想要的样子。 编写Loader时要遵循单一原则，每个Loader只做一种”转义”工作。 每个Loader的拿到的是源文件内容（source），可以通过返回值的方式将处理后的内容输出，也可以调用this.callback()方法，将内容返回给webpack。 还可以通过 this.async()生成一个callback函数，再用这个callback将处理后的内容输出出去。 此外webpack还为开发者准备了开发loader的工具函数集——loader-utils。 相对于Loader而言，Plugin的编写就灵活了许多。 webpack在运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。 webpack的热更新是如何做到的？说明其原理？webpack的热更新又称热替换（Hot Module Replacement），缩写为HMR。 这个机制可以做到不用刷新浏览器而将新变更的模块替换掉旧的模块。 原理: 首先要知道server端和client端都做了处理工作 第一步，在 webpack 的 watch 模式下，文件系统中某一个文件发生修改，webpack 监听到文件变化，根据配置文件对模块重新编译打包，并将打包后的代码通过简单的 JavaScript 对象保存在内存中。 第二步是 webpack-dev-server 和 webpack 之间的接口交互，而在这一步，主要是 dev-server 的中间件 webpack-dev-middleware 和 webpack 之间的交互，webpack-dev-middleware 调用 webpack 暴露的 API对代码变化进行监控，并且告诉 webpack，将代码打包到内存中。 第三步是 webpack-dev-server 对文件变化的一个监控，这一步不同于第一步，并不是监控代码变化重新打包。当我们在配置文件中配置了devServer.watchContentBase 为 true 的时候，Server 会监听这些配置文件夹中静态文件的变化，变化后会通知浏览器端对应用进行 live reload。注意，这儿是浏览器刷新，和 HMR 是两个概念。 第四步也是 webpack-dev-server 代码的工作，该步骤主要是通过 sockjs（webpack-dev-server 的依赖）在浏览器端和服务端之间建立一个 websocket 长连接，将 webpack 编译打包的各个阶段的状态信息告知浏览器端，同时也包括第三步中 Server 监听静态文件变化的信息。浏览器端根据这些 socket 消息进行不同的操作。当然服务端传递的最主要信息还是新模块的 hash 值，后面的步骤根据这一 hash 值来进行模块热替换。 webpack-dev-server/client 端并不能够请求更新的代码，也不会执行热更模块操作，而把这些工作又交回给了 webpack，webpack/hot/dev-server 的工作就是根据 webpack-dev-server/client 传给它的信息以及 dev-server 的配置决定是刷新浏览器呢还是进行模块热更新。当然如果仅仅是刷新浏览器，也就没有后面那些步骤了。 HotModuleReplacement.runtime 是客户端 HMR 的中枢，它接收到上一步传递给他的新模块的 hash 值，它通过 JsonpMainTemplate.runtime 向 server 端发送 Ajax 请求，服务端返回一个 json，该 json 包含了所有要更新的模块的 hash 值，获取到更新列表后，该模块再次通过 jsonp 请求，获取到最新的模块代码。这就是上图中 7、8、9 步骤。 而第 10 步是决定 HMR 成功与否的关键步骤，在该步骤中，HotModulePlugin 将会对新旧模块进行对比，决定是否更新模块，在决定更新模块后，检查模块之间的依赖关系，更新模块的同时更新模块间的依赖引用。 最后一步，当 HMR 失败后，回退到 live reload 操作，也就是进行浏览器刷新来获取最新打包代码。 如何利用webpack来优化前端性能？（提高性能和体验）用webpack优化前端性能是指优化webpack的输出结果，让打包的最终结果在浏览器运行快速高效。 压缩代码。删除多余的代码、注释、简化代码的写法等等方式。可以利用webpack的UglifyJsPlugin和ParallelUglifyPlugin来压缩JS文件， 利用cssnano（css-loader?minimize）来压缩css 利用CDN加速。在构建过程中，将引用的静态资源路径修改为CDN上对应的路径。可以利用webpack对于output参数和各loader的publicPath参数来修改资源路径 删除死代码（Tree Shaking）。将代码中永远不会走到的片段删除掉。可以通过在启动webpack时追加参数–optimize-minimize来实现 提取公共代码。 如何提高webpack的构建速度？ 多入口情况下，使用CommonsChunkPlugin来提取公共代码 通过externals配置来提取常用库 利用DllPlugin和DllReferencePlugin预编译资源模块 通过DllPlugin来对那些我们引用但是绝对不会修改的npm包来进行预编译，再通过DllReferencePlugin将预编译的模块加载进来。 使用Happypack 实现多线程加速编译 使用webpack-uglify-parallel来提升uglifyPlugin的压缩速度。 原理上webpack-uglify-parallel采用了多核并行压缩来提升压缩速度 使用Tree-shaking和Scope Hoisting来剔除多余代码 怎么配置单页应用？怎么配置多页应用？单页应用可以理解为webpack的标准模式，直接在entry中指定单页应用的入口即可，这里不再赘述 多页应用的话，可以使用webpack的 AutoWebPlugin来完成简单自动化的构建，但是前提是项目的目录结构必须遵守他预设的规范。 多页应用中要注意的是： 每个页面都有公共的代码，可以将这些代码抽离出来，避免重复的加载。比如，每个页面都引用了同一套css样式表 随着业务的不断扩展，页面可能会不断的追加，所以一定要让入口的配置足够灵活，避免每次添加新页面还需要修改构建配置 npm打包时需要注意哪些？如何利用webpack来更好的构建？Npm是目前最大的 JavaScript 模块仓库，里面有来自全世界开发者上传的可复用模块。你可能只是JS模块的使用者，但是有些情况你也会去选择上传自己开发的模块。 关于NPM模块上传的方法可以去官网上进行学习，这里只讲解如何利用webpack来构建。 NPM模块需要注意以下问题： 要支持CommonJS模块化规范，所以要求打包后的最后结果也遵守该规则。 Npm模块使用者的环境是不确定的，很有可能并不支持ES6，所以打包的最后结果应该是采用ES5编写的。并且如果ES5是经过转换的，请最好连同SourceMap一同上传。 Npm包大小应该是尽量小（有些仓库会限制包大小） 发布的模块不能将依赖的模块也一同打包，应该让用户选择性的去自行安装。这样可以避免模块应用者再次打包时出现底层模块被重复打包的情况。 UI组件类的模块应该将依赖的其它资源文件，例如.css文件也需要包含在发布的模块里。 基于以上需要注意的问题，我们可以对于webpack配置做以下扩展和优化： CommonJS模块化规范的解决方案： 设置output.libraryTarget=’commonjs2’使输出的代码符合CommonJS2 模块化规范，以供给其它模块导入使用 输出ES5代码的解决方案：使用babel-loader把 ES6 代码转换成 ES5 的代码。再通过开启devtool: ‘source-map’输出SourceMap以发布调试。 Npm包大小尽量小的解决方案：Babel 在把 ES6 代码转换成 ES5 代码时会注入一些辅助函数，最终导致每个输出的文件中都包含这段辅助函数的代码，造成了代码的冗余。解决方法是修改.babelrc文件，为其加入transform-runtime插件 不能将依赖模块打包到NPM模块中的解决方案：使用externals配置项来告诉webpack哪些模块不需要打包。 对于依赖的资源文件打包的解决方案：通过css-loader和extract-text-webpack-plugin来实现，配置如下： 如何在vue项目中实现按需加载？Vue UI组件库的按需加载 为了快速开发前端项目，经常会引入现成的UI组件库如ElementUI、iView等，但是他们的体积和他们所提供的功能一样，是很庞大的。 而通常情况下，我们仅仅需要少量的几个组件就足够了，但是我们却将庞大的组件库打包到我们的源码中，造成了不必要的开销。 不过很多组件库已经提供了现成的解决方案，如Element出品的babel-plugin-component和AntDesign出品的babel-plugin-import 安装以上插件后，在.babelrc配置中或babel-loader的参数中进行设置，即可实现组件按需加载了。 单页应用的按需加载 现在很多前端项目都是通过单页应用的方式开发的，但是随着业务的不断扩展，会面临一个严峻的问题——首次加载的代码量会越来越多，影响用户的体验。 通过import()语句来控制加载时机，webpack内置了对于import()的解析，会将import()中引入的模块作为一个新的入口在生成一个chunk。 当代码执行到import()语句时，会去加载Chunk对应生成的文件。import()会返回一个Promise对象，所以为了让浏览器支持，需要事先注入Promise polyfill","categories":[],"tags":[],"keywords":[]},{"title":"Ubuntu安装QQ","slug":"Ubuntu安装QQ","date":"2020-06-21T12:54:03.198Z","updated":"2020-06-21T14:31:49.420Z","comments":true,"path":"2020/06/21/Ubuntu安装QQ/","link":"","permalink":"https://www.yichen.online/2020/06/21/Ubuntu%E5%AE%89%E8%A3%85QQ/","excerpt":"腾讯官方早就在10年代初就停止运营Linux版QQ，然而民间折腾Linux版QQ的脚步从来没停过。时至今日，它总算有了完美无暇的方案——deepin wine系列。要感谢deepin公司的最大努力。也要感谢wszqkzqk大佬的努力，让deepin之外的众多Ubuntu/ArchLinux系用户都能用上最稳定的wine QQ。完成许多Linux用户安装QQ的心愿。","text":"腾讯官方早就在10年代初就停止运营Linux版QQ，然而民间折腾Linux版QQ的脚步从来没停过。时至今日，它总算有了完美无暇的方案——deepin wine系列。要感谢deepin公司的最大努力。也要感谢wszqkzqk大佬的努力，让deepin之外的众多Ubuntu/ArchLinux系用户都能用上最稳定的wine QQ。完成许多Linux用户安装QQ的心愿。 官网安装首先来到腾讯QQ的下载官网,点击下载QQ for LinuxLinux QQ 目前支持x64（x86_64、amd64）、arm64（aarch64）、mips64（mips64el）三种架构，每种架构支持Debian系、红帽系、Arch Linux系、其它发行版中的一种或几种（未来可能继续扩充）。每一次发布均会提供架构和发行版的若干种组合支持的安装包，可按下面所述的规则进行选择。 每一个安装包会按照形如如下的格式命名： 后缀名 安装包管理器 支持发行版 .rpm rpm/yum 红帽系(如redhat、fedora. centos ) .deb dpkg/apt debian系(如debian. ubuntu、 银河麒麟) .pkg.tar.xz pacman arch系(如Arch Linux、manjaro) .sh bash 任意支持bash的发行版 安装方法 下载自己所用系统的安装包（比如：我的系统是64位Ubuntu 18.04，我就下载了.deb的安装包）Ubuntu系统下载可用以下地址：http://36.102.219.21/dlied1.qq.com/qqweb/LinuxQQ_1/linuxqq_2.0.0-b2-1082_amd64.deb?mkey=5eef66677bb280df&amp;f=0f1d&amp;cip=123.178.166.42&amp;proto=http&amp;access_type=$header_ApolloNet cd到自己下载软件包的文件夹使用命令 sudo dpkg -i /* 文件名 */进行安装，比如我的就是： 1sudo dpkg -i linuxqq_2.0.0-b2-1082_amd64.deb 出现如下界面，表示安装成功啦！ 启动linuxqq 通过主菜单的腾讯QQ图标启动 在命令行输入以下命令启动： 1linuxqq 启动成功效果图： 然后打开手机QQ 扫码进行登录（暂不支持账号密码登录） deepin移植安装安装移植环境 下载移植环境用以下命令进行克隆 1git clone https://github.com/wszqkzqk/deepin-wine-ubuntu.git 或点击下载到本地。在中国推荐用下面的地址，速度更快： 1git clone https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu.git 附：没有安装git的小伙伴儿，需要执行： 1sudo apt-get install git 进行安装git 否则无法完成环境的克隆。 移植环境安装cd到自己到环境的下载目录，解压刚刚克隆的压缩包，切换到解压文件目录，选择在终端中运行： 1sudo ./install.sh 到这里环境就安装好啦！！！ 安装wine-QQ下载并安装所需要的deepin-wine容器 （建议在终端下使用dpkg -i安装容器，否则容易误报依赖错误） 可使用deepin发布的最新版容器安装包： QQ TIM QQ轻聊版 微信 如果出现依赖错误，请下载这个版本 其它deepin-wine容器：阿里云镜像下载 若版本不兼容，可选择下载安装以下旧版包文件： QQ TIM QQ轻聊版 微信 下载好自己的软件包过后，使用dpkg -i进行安装 1sudo dpkg -i deepin.com.qq.im_9.1.8deepin0_i386.deb 这样就安装完成啦！找到主菜单的QQ图标就可以点击启动啦是不是比官方的linux-QQ好看呢，就跟Windows的QQ一样呢。而且还可以账号密码登录 记住账号等功能。 登录成功后的界面展示Linux-QQ: Wine-QQ: 到这里Ubuntu安装QQ就已经完成啦，有不懂得小伙伴儿或者遇到问题的小伙伴儿可以留言评论哟！","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://www.yichen.online/categories/Ubuntu/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://www.yichen.online/tags/Ubuntu/"},{"name":"QQ for Linux","slug":"QQ-for-Linux","permalink":"https://www.yichen.online/tags/QQ-for-Linux/"},{"name":"Wine-QQ","slug":"Wine-QQ","permalink":"https://www.yichen.online/tags/Wine-QQ/"}],"keywords":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://www.yichen.online/categories/Ubuntu/"}]},{"title":"超实用的下载视频工具","slug":"You-Get安装","date":"2020-06-17T10:44:58.448Z","updated":"2020-06-20T02:02:45.969Z","comments":true,"path":"2020/06/17/You-Get安装/","link":"","permalink":"https://www.yichen.online/2020/06/17/You-Get%E5%AE%89%E8%A3%85/","excerpt":"You-Get是python的一个开源库，使用you-get你只需要取得视频所在网页链接地址就可以很轻松的下载下来，目前you-get所支持的网站包含国内外几十个网站(youtube、twitter、腾讯、爱奇艺、优酷、bilibili等)，基本上可以满足你的需求。","text":"You-Get是python的一个开源库，使用you-get你只需要取得视频所在网页链接地址就可以很轻松的下载下来，目前you-get所支持的网站包含国内外几十个网站(youtube、twitter、腾讯、爱奇艺、优酷、bilibili等)，基本上可以满足你的需求。 这是you-get从YouTube下载视频的方法： 123456789101112131415you-get 'https://www.youtube.com/watch?v=jNQXAC9IVRw'site: YouTubetitle: Me at the zoostream: - itag: 43 container: webm quality: medium size: 0.5 MiB (564215 bytes) # download-with: you-get --itag=43 [URL]Downloading Me at the zoo.webm ... 100% ( 0.5/ 0.5MB) ├██████████████████████████████████┤[1/1] 6 MB/sSaving Me at the zoo.en.srt ... Done. 安装Python项目依赖正式发行you-get版在PyPI上分发，可以通过pip软件包管理器从PyPI镜像轻松安装。请注意，您必须使用Python 3版本pip： 1pip3 install you-get Windows安装Python1.进入python官网，选择dowload然后选择windows如下图：2.安装Python请务必要勾选Add Python 3.8 to PATH，这样可以将 Python 命令工具所在目录添加到系统 Path 环境变量中，以后开发程序或者运行 Python 命令会非常方便。点击“Next”继续，选择安装目录。选择好你常用的安装目录，点击“Install”，等待几分钟就可以完成安装。 Ubuntu安装python在 Ubuntu 终端执行以下两条命令即可更新 Python 版本： 123sudo apt-get updatesudo apt-get install python3.8 安装成功后。使用python3 -v检测一下，是否安装成功。 安装You-Get打开Windows的命令提示符（win+r 输入cmd）输入一下命令安装you-get 1pip3 install you-get 看到这里是不是觉得安装you-get，非常简单呢，你有python环境的话，一条命令就完成啦！ 升级You-Get根据您选择安装的选项you-get，可以通过以下方式进行升级： 1pip3 install --upgrade you-get 下载影片收到感兴趣的视频后，您可能需要使用–info/ -i选项查看所有可用的质量和格式： 123you-get -i https://v.qq.com/x/page/y3078y1fxcn.htmlyou-get https://v.qq.com/x/page/y3078y1fxcn.html 效果图如下：默认情况下，顶部的是您将获得的一个。如果这对您来说很酷，请下载： 123456789101112131415$ you-get 'https://www.youtube.com/watch?v=jNQXAC9IVRw'site: YouTubetitle: Me at the zoostream: - itag: 242 container: webm quality: 320x240 size: 0.6 MiB (618358 bytes) # download-with: you-get --itag=242 [URL]Downloading Me at the zoo.webm ... 100% ( 0.6/ 0.6MB) ├██████████████████████████████████████████████████████████████████████████████┤[2/2] 2 MB/sMerging video parts... Merged into Me at the zoo.webmSaving Me at the zoo.en.srt ... Done. （如果YouTube视频有任何隐藏字幕，它们将与视频文件一起以SubRip字幕格式下载。） 或者，如果您喜欢其他格式（mp4），则只需使用you-get显示的选项即可： 1you-get --itag=18 'https://www.youtube.com/watch?v=jNQXAC9IVRw' 注意 目前，我们大多数受支持的网站尚未实现格式选择；在这种情况下，默认的下载格式是质量最高的格式。 ffmpeg 是必需的依赖项，用于下载和加入分多个部分（例如，在优酷等某些网站上）流式传输的视频，以及用于1080p或高分辨率的YouTube视频。 如果您不想you-get在下载后加入视频部分，请使用–no-merge/ -n选项。 下载其他内容如果您已经有了想要的确切资源的URL，则可以使用以下方法直接下载它： 12345678$ you-get https://stallman.org/rms.jpgSite: stallman.orgTitle: rmsType: JPEG Image (image/jpeg)Size: 0.06 MiB (66482 Bytes)Downloading rms.jpg ...100.0% ( 0.1/0.1 MB) ├████████████████████████████████████████┤[1/1] 127 kB/s 暂停并继续下载您可以使用Ctrl+C中断下载 下载路径使用–output-dir/ -o选项设置路径，并使用–output-filename/ -O设置下载文件的名称： 1you-get -o ~/Videos -O zoo.webm 'https://www.youtube.com/watch?v=jNQXAC9IVRw' 代理设置您可以you-get通过–http-proxy/ -x选项指定要使用的HTTP代理： 1you-get -x 127.0.0.1:8080 'https://www.youtube.com/watch?v=jNQXAC9IVRw' 支持的网站 Site URL Videos? Images? Audios? YouTube https://www.youtube.com/ ✓ Twitter https://twitter.com/ ✓ ✓ VK http://vk.com/ ✓ ✓ Vine https://vine.co/ ✓ Vimeo https://vimeo.com/ ✓ Veoh http://www.veoh.com/ ✓ Tumblr https://www.tumblr.com/ ✓ ✓ ✓ TED http://www.ted.com/ ✓ SoundCloud https://soundcloud.com/ ✓ SHOWROOM https://www.showroom-live.com/ ✓ Pinterest https://www.pinterest.com/ ✓ MTV81 http://www.mtv81.com/ ✓ Mixcloud https://www.mixcloud.com/ ✓ Metacafe http://www.metacafe.com/ ✓ Magisto http://www.magisto.com/ ✓ Khan Academy https://www.khanacademy.org/ ✓ Internet Archive https://archive.org/ ✓ Instagram https://instagram.com/ ✓ ✓ InfoQ http://www.infoq.com/presentations/ ✓ Imgur http://imgur.com/ ✓ Heavy Music Archive http://www.heavy-music.ru/ ✓ Freesound http://www.freesound.org/ ✓ Flickr https://www.flickr.com/ ✓ ✓ FC2 Video http://video.fc2.com/ ✓ Facebook https://www.facebook.com/ ✓ eHow http://www.ehow.com/ ✓ Dailymotion http://www.dailymotion.com/ ✓ Coub http://coub.com/ ✓ CBS http://www.cbs.com/ ✓ Bandcamp http://bandcamp.com/ ✓ AliveThai http://alive.in.th/ ✓ interest.me http://ch.interest.me/tvn ✓ 755ナナゴーゴー http://7gogo.jp/ ✓ ✓ niconicoニコニコ動画 http://www.nicovideo.jp/ ✓ 163网易视频网易云音乐 http://v.163.com/http://music.163.com/ ✓ ✓ 56网 http://www.56.com/ ✓ AcFun http://www.acfun.cn/ ✓ Baidu百度贴吧 http://tieba.baidu.com/ ✓ ✓ 爆米花网 http://www.baomihua.com/ ✓ bilibili哔哩哔哩 http://www.bilibili.com/ ✓ ✓ ✓ 豆瓣 http://www.douban.com/ ✓ ✓ 斗鱼 http://www.douyutv.com/ ✓ 凤凰视频 http://v.ifeng.com/ ✓ 风行网 http://www.fun.tv/ ✓ iQIYI爱奇艺 http://www.iqiyi.com/ ✓ 激动网 http://www.joy.cn/ ✓ 酷6网 http://www.ku6.com/ ✓ 酷狗音乐 http://www.kugou.com/ ✓ 酷我音乐 http://www.kuwo.cn/ ✓ 乐视网 http://www.le.com/ ✓ 荔枝FM http://www.lizhi.fm/ ✓ 秒拍 http://www.miaopai.com/ ✓ MioMio弹幕网 http://www.miomio.tv/ ✓ MissEvan猫耳FM http://www.missevan.com/ ✓ 痞客邦 https://www.pixnet.net/ ✓ PPTV聚力 http://www.pptv.com/ ✓ 齐鲁网 http://v.iqilu.com/ ✓ QQ腾讯视频 http://v.qq.com/ ✓ 企鹅直播 http://live.qq.com/ ✓ Sina新浪视频微博秒拍视频 http://video.sina.com.cn/http://video.weibo.com/ ✓ Sohu搜狐视频 http://tv.sohu.com/ ✓ Tudou土豆 http://www.tudou.com/ ✓ 虾米 http://www.xiami.com/ ✓ ✓ 阳光卫视 http://www.isuntv.com/ ✓ 音悦Tai http://www.yinyuetai.com/ ✓ Youku优酷 http://www.youku.com/ ✓ 战旗TV http://www.zhanqi.tv/lives ✓ 央视网 http://www.cntv.cn/ ✓ Naver네이버 http://tvcast.naver.com/ ✓ 芒果TV http://www.mgtv.com/ ✓ 火猫TV http://www.huomao.com/ ✓ 阳光宽频网 http://www.365yg.com/ ✓ 西瓜视频 https://www.ixigua.com/ ✓ 新片场 https://www.xinpianchang.com// ✓ 快手 https://www.kuaishou.com/ ✓ ✓ 抖音 https://www.douyin.com/ ✓ TikTok https://www.tiktok.com/ ✓ 中国体育(TV) http://v.zhibo.tv/ http://video.zhibo.tv/ ✓ 知乎 https://www.zhihu.com/ ✓ 参考资料：https://github.com/soimort/you-get","categories":[{"name":"下载神器","slug":"下载神器","permalink":"https://www.yichen.online/categories/%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8/"}],"tags":[{"name":"You-Get","slug":"You-Get","permalink":"https://www.yichen.online/tags/You-Get/"},{"name":"Python","slug":"Python","permalink":"https://www.yichen.online/tags/Python/"}],"keywords":[{"name":"下载神器","slug":"下载神器","permalink":"https://www.yichen.online/categories/%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8/"}]},{"title":"Ubuntu安装VMware15.0教程（含注册码）","slug":"Ubuntu安装VMware15.0教程","date":"2020-06-16T12:03:45.545Z","updated":"2020-06-16T12:29:13.668Z","comments":true,"path":"2020/06/16/Ubuntu安装VMware15.0教程/","link":"","permalink":"https://www.yichen.online/2020/06/16/Ubuntu%E5%AE%89%E8%A3%85VMware15.0%E6%95%99%E7%A8%8B/","excerpt":"","text":"下载 1.去VMware官网 下载VMware Workstation 地址：https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html 下载目录2.在你的下载目录，打开终端（Ctrl+Alt+t）输入以下命令 12sudo chmod +x VMware-Workstation-Full-15.5.2-15785246.x86_64.bundle.&#x2F;VMware-Workstation-Full-15.5.2-15785246.x86_64.bundle 注意：不要盲目复制代码，可能下载的版本不同。文件名不同，就需要输入不同的命令。 开始安装3.安装过程不再赘述了，基本和Windows安装VMware一样。成功截图：安装完成可以使用 1sudo vmware-installer -l 检测一下。 安装密钥考虑到许多小伙伴安装需要密钥，所以小编在此列出几个密钥供大家参考使用。 12345678910111213141516171819FA1J8-6WYEP-M803P-QPZ5T-XFKZ6FU5D0-FMGEK-H8E6Q-U4XG9-WCAA2VU30R-A5G4P-M801P-N7Z7C-XQUWACF79A-01Z5L-0891Z-5XY5Z-PVAUDFG14H-6VDEP-484HZ-KZQQZ-QP8Y6UA7WA-83Z11-080RY-4GYNX-MCRY4VV388-AGX86-H81XP-8WPZC-QKHV2AF35K-8GYD1-081LQ-74QZV-ZZ0T0ZF7N8-8GEEL-480UZ-8PZGT-MF2G2CC540-D9Z9M-4881P-8MMEE-ZV2DD 安装vmware tool","categories":[{"name":"技术","slug":"技术","permalink":"https://www.yichen.online/categories/%E6%8A%80%E6%9C%AF/"},{"name":"工具","slug":"技术/工具","permalink":"https://www.yichen.online/categories/%E6%8A%80%E6%9C%AF/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://www.yichen.online/tags/Ubuntu/"},{"name":"VMware","slug":"VMware","permalink":"https://www.yichen.online/tags/VMware/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://www.yichen.online/categories/%E6%8A%80%E6%9C%AF/"},{"name":"工具","slug":"技术/工具","permalink":"https://www.yichen.online/categories/%E6%8A%80%E6%9C%AF/%E5%B7%A5%E5%85%B7/"}]},{"title":"Html CSS 整理笔记","slug":"HTML CSS 整理笔记","date":"2020-06-07T14:12:33.906Z","updated":"2020-06-08T15:23:06.189Z","comments":true,"path":"2020/06/07/HTML CSS 整理笔记/","link":"","permalink":"https://www.yichen.online/2020/06/07/HTML%20CSS%20%E6%95%B4%E7%90%86%E7%AC%94%E8%AE%B0/","excerpt":"","text":"点击链接后退页面： 回到上一个网页 修改placeholder提示的样式：除IE外通用写法 类名或标签名::placeholder {color: red;} 加兼容前缀写法css超出一行显示省略号 给定宽度(width:100px)、 超出隐藏（overflow:hidden）、 强制在同一行显示（white-space: nowrap）、 省略号（text-overflow:ellipsis） 常见字体单位1.em相当于“倍”，比如设置当前的div的字体大小为1.5em，则当前的div的字体大小为：该div继承的父级字体大小*1.5。（根据他爸） 2.remr即root，始终相对于根节点html的font-size进行缩放。（根据祖先html） 3.vhvh指当前屏幕可见高度的1%，即 height:100vh == height:100%;区别：当元素没有内容时候，若设置height:100%该元素高度不会被撑开。但设置height:100vh，该元素会被撑开和屏幕高度一致。 4.vwViewport width 视窗宽度。1vw = 视窗宽度的1%，1vw就是当前屏幕宽度的1%对比：width:100%; 设置元素宽度占父元素的宽度100%。width:100vw; 相对于屏幕可见宽度来设置，所以会出现50vw 比50%大的情况。 HTML5基础在网页中，HTML决定结构和内容，CSS设定网页的表现样式，JavaScript控制网页的行为。html>```必须位于HTML文档第一行。12345&#96;&#96;&#96;&lt;meta&gt;&#96;&#96;&#96;标签：用于方便浏览器解析或搜索引擎搜索，一般放置于&#96;&#96;&#96;&lt;head&gt;&#96;&#96;&#96;中，用&quot;名称&#x2F;值&quot;方式：&lt;&#x2F;br&gt;(1)表示文档内容类型、字符串编码信息&#96;&#96;&#96;html&lt;meta charset&#x3D;&quot;UTF-8&quot;&gt; (2)为搜索引擎定义关键词: 1&lt;meta name=\"keywords\" content=\"HTML,CSS,XML,XHTML,JavaScript\"&gt; (3)为网页定义描述内容: 1&lt;meta name=\"description\" content=\"Free Web tutorials on HTML and CSS\"&gt; (4)定义网页作者: 1&lt;meta name=\"author\" content=\"Hege Refsnes\"&gt; (5)每30秒中刷新当前页面: 1&lt;meta http-equiv=\"refresh\" content=\"30\"&gt; 字体样式标签：&lt;strong&gt;字体变粗、&lt;em&gt;和&lt;i&gt;都有斜体的效果，区别&lt;em&gt;表示对内容的强调注释&lt;!--内容--&gt;常用转义字符：&amp;nbsp; //空格 &amp;gt; //大于号&gt; &amp;lt; //小于号&lt; &amp;quot; //双引号 &amp;copy; //版本符号 常用图片格式：JPG、GIF、PNG、BMP图片标签，必须要有src和alt属性：1&lt;img src=\"图片地址\" alt=\"图片的替代文字\" title=\"鼠标悬停提示文字\" width=\"图片宽度\" height=\"图片高度\" /&gt; 超链接标签(target指定在哪个窗口打开 值有_self自身窗口、_blank新建窗口)1&lt;a href=\"链接地址\" target=\"目标打开窗口位置\"&gt;附连接的文本或图像&lt;/a&gt; 链接地址(1)绝对路径(指向目标地址的完整描述 多指向本站点外的文件如&lt;a href=&quot;http://www.baidu.com/index.html&quot;&gt;百度&lt;/a&gt;)(2)相对路径(一般指向本站点内的文件,如&lt;a href=&quot;login/login.html&quot;&gt;登陆&lt;a&gt;)(3)相对路径中”../“表示当前目录的上级目录，”../../“表示上上级目录 超链接的应用场合：(1)页面间链接: 1&lt;a href=\"login.html\" target=\"_blank\"&gt;为您跳转到登录页&lt;/a&gt; (2)锚链接：先在目标位置B设置标记如：&lt;a name=&quot;new&quot;&gt;这里是目标位置&lt;/a&gt;，然后在A位置设置链接路径href属性值为”#标记名”如：&lt;a href=&quot;#marker&quot;当前位置A&lt;/a&gt;(3)功能性链接：单击时启动本机自带的应用程序如QQ、电子邮箱等如电子邮件链接：”mailto:电子邮件地址” 元素分类(1).块元素：如&lt;p&gt;&lt;h1&gt;&lt;div&gt;无论内容有多少，该元素都独占一行(一块)。块状元素特点：如果没有设置自身宽度，则显示为父容器的100%。(2).行内元素：如&lt;strong&gt;&lt;a&gt; 显示宽度由自己的内容决定，其他元素可以排在它后面。 元素类型转换： 块状元素转为内联元素：display: inline; 内联元素转为块状元素：display: block; 把元素设为内联块状元素： display: inline-block;(就是同时具备内联元素、块状元素特点，如img、input) 列表、表格、媒体元素三种列表： 有序列表&lt;ol&gt;&lt;li&gt; 无序列表&lt;ul&gt;&lt;li&gt;ul中只能嵌套li，而li可以嵌套任意标签。 定义列表&lt;dl&gt;&lt;dt&gt;&lt;dd&gt; 是标题及列表项的结合。表格基本结构：单元格、行、列(1)&lt;table&gt;&lt;tr&gt;&lt;th&gt;&lt;td&gt;(2)HTML5中已废除table的border属性，用css控制边框宽度。(3)跨列(横跨)：&lt;td colspan=&quot;所跨的列数&quot;&gt;内容&lt;/td&gt;跨行(竖跨)：&lt;td rowspan=&quot;所跨行数&quot;&gt;内容&lt;/td&gt;，两者都要删除被合并的其他单元格。(4)表格特点：同行单元格高度一致且水平对齐，同列单元格宽度一致且垂直对齐。 视频元素：(1)controls属性提供播放暂停和音量控件、autoplay属性自动播放、loop属性循环播放 1&lt;video src=\"视频路径\" controls=\"controls\"&gt;你的浏览器不支持video标签&lt;/video&gt; (2)source元素链接不同的视频文件，浏览器会自动选择第一个可识别的格式： 1234&lt;video controls&gt; &lt;source src=\"video/video.webm\" /&gt; &lt;source src=\"video/video.mp4\" /&gt;你的浏览器不支持video标签&lt;video&gt; 音频元素：使用语法和视频元素一样，只要把video换成audio即可。HTML5的结构元素(先划分结构再写内容)：header(头部)、footer(脚部)、section(独立区域)、article(独立文章内容)、aside(相关内容或应用,常用于侧边栏)、nav(导航类辅助内容) iframe框架:方便在页面中引用站外的页面内容。1&lt;iframe name=\"此框架的标识名\" src=\"引用的页面地址\"&gt;&lt;/iframe&gt; iframe和锚链接的结合：使锚链接的内容在iframe框架中打开12&lt;iframe name=\"mainFrame\" src=\"框架引用的页面地址\" /&gt;&lt;a href=\"链接路径\" target=\"mainFrame\"&gt;点击在框架中打开&lt;/a&gt; 表单表单标签form：123&lt;form method=\"post\" action=\"login.html\" enctype=\"text/plain\"&gt; 表单内容&lt;/form&gt; (1)action=”url”属性意为把表单提交到某个页面,method=get|post意为向服务器发送数据的方式。(2)提交方法：get提交,表单数据会在地址栏url中显示；而post提交不会显示，所以post提交更安全。(3)enctype=”text/plain”指enctype 属性规定在发送到服务器之前应该如何对表单数据进行编码。text/plain 空格转换为加号+，但不对特殊字符编码。 表单元素：(1)表单元素 input 标签的属性： 12345type(默认text,其他password,email,checkbox,radio,button,submit,reset,file,image,url,hidden,number,range,search等)、name、value(可选,该元素的初始值)、size(该元素的初始宽度)、maxlength(可输入的最大字符数)、checked(按钮被选中)&#96;&#96;&#96; (2)列表框 select option 标签：&#96;&#96;&#96;html&lt;select&gt;中至少包含一个&lt;option&gt;。 在 option 有多行选项需滚动查看时，size属性设置可提示看到的行数，selected属性默认选中该列表项。(3)按钮：button普通(要和事件如onclick关联使用),submit(提交表单到action指定的url并传递表单数据),reset重置。要求美观可使用图片按钮 1&lt;input type=\"image\" src=\"图片路径\"/&gt; (4)多行文本域：不能用value属性赋初始值 123&lt;textarea name=\"标识名\" cols=\"显示的列数\" rows=\"显示的行数\"&gt; 自我评价 &lt;/textarea&gt; (5)数字number：限制输入的数据为数字，设定最大值最小值、合法的数据间隔step或默认值等 1&lt;input type=\"number\" name=\"num\" min=\"0\" max=\"100\" step=\"10\"/&gt; (6)滑块range：作用和数字number一样，只是外观显示为用滑动条选择数值 1&lt;input type=\"range\" name=\"range\" min=\"0\" max=\"100\" step=\"10\"/&gt; (7)search搜索框:在任意页面中用于输入搜索关键词的文本框 1&lt;input type=\"search\" name=\"sousuo\" /&gt; (8)文件域：多用于文件上传 12&lt;input type=\"file\" name=\"files\"/&gt;&lt;input type=\"submit\" name=\"upfiles\" value=\"上传\"/&gt; (9)当表单数据包含普通数据、文件数据等多部分内容时，要设置表单的enctype编码属性为 multipart/form-data,表示把表单数据分为多部分提交。(10)表单隐藏域hidden：数据不会页面中显示，但会随表单一同提交。 1&lt;input type=\"hidden\" name=\"userid\" value=\"20\"/&gt; (11)表单元素 只读属性readonly、禁用disabled(12)W3CHTML5标准中，规定对布尔类型的属性，属性值可以省略。(13)表单元素的标注label：当点击标注的文本时，浏览器会自动对焦关联的表单元素，for属性规定label与哪个表单元素绑定。name和id属性必需。 12&lt;label for=\"female\"&gt;女&lt;/label&gt;&lt;input type=\"radio\" name=\"sex\" id=\"female\" /&gt; HTML5表单新标签12345678910111213&lt;form&gt; 供用户输入的表单&lt;input&gt; 输入域&lt;textarea&gt; 文本域 (多行输入)&lt;label&gt; 定义 &lt;input&gt; 元素的标签，一般为输入标题&lt;fieldset&gt; 定义一组相关的表单元素，并使用外框包含起来&lt;legend&gt; 定义 &lt;fieldset&gt; 元素的标题&lt;select&gt; 下拉选项列表&lt;optgroup&gt; 选项组&lt;option&gt; 下拉列表中的选项&lt;button&gt; 点击按钮&lt;datalist&gt; 指定一个预先定义的输入控件选项列表&lt;keygen&gt; 定义了表单的密钥对生成器字段&lt;output&gt; 计算结果 表单验证(1)好处：减轻服务器的压力；保证数据的可行性和安全性。(2)placeholder:为文本框提示用户输入 1&lt;input type=\"text\" name=\"name\" placeholder=\"请输入你的姓名\"/&gt; (3)required：规定文本框不能为空 1&lt;input type=\"email\" name=\"email\" required/&gt; (4)pattern：输入的内容必须符合正则表达式自定义的规则 1&lt;input type=\"text\" name=\"tel\" required pattern=\"^1[35]\\d&#123;9&#125;\"/&gt;规定以13、15开头的11位数字 CSS3基础CSS：Cascading Style Sheet层叠样式表,又称风格样式表Style Sheet，用于设计网页风格。CSS3的基本语法结构：(1)CSS中注释为 /内容/(2)CSS规则由选择器、声明组成。(3)声明必须放在大括号{}中，声明可以是一或多条。(4)每条声明由一个属性和值组成，属性和值用冒号:分开，每条语句以分号;结尾如 123456&lt;style type=\"text/css\"&gt; h1&#123; font-size : 12px; color : red; &#125;&lt;/style&gt; 在HTML中引入CSS样式的方式：(1)行内样式：直接在标签中用style属性设置CSS 如: 1&lt;p style=\"font-size:10px;\"&gt;字体大小&lt;/p&gt; (2)内部样式表：把css写在head的 style 中，规范化应为 1&lt;style type=\"text/css\"&gt; (3)外部样式表：文件扩展名为.css，在外部样式表中不需要 style 标签。a.链接式引用外部样式表： 1&lt;link type=\"text/css\" rel=\"stylesheet\" href=\"css/style.css\"/&gt; b.导入式引用外部样式表： 1&lt;style type=\"text/css\"&gt;@import url(\"css/stype.css\"); 样式优先级：”就近原则”，行内样式&gt;内部样式表&gt;外部样式表当有很多样式时，用 !important 可以为某一个样式覆盖掉其他所有样式。如 #textcolor{ clor:pink !important;} CSS选择器命名规范：驼峰命名法，用语义化单词命名且不能和ID选择器同名.CSS3的基本选择器(1)标签选择器：以标签名作选择器的名称如 h1{color:red;}(2)类选择器：选择器名可自定义如 .red{color:red;}同时要设置&lt;标签 class=”red”&gt;内容&lt;/标签&gt;(3)ID选择器：选择器名可自定义如 #red{color:red;}同时要设置&lt;标签 id=”red”&gt;内容&lt;/标签&gt;，但同一个id属性的选择器在页面中只能用一次。 基本选择器的优先级：ID选择器&gt;类选择器&gt;标签选择器CSS3的高级选择器层次选择器：(1)后代选择器A B{ }：中间用空格隔开，只要是A的后代元素都会被选中。(2)子选择器A&gt;B{ }：只能选择A的子元素。(3)相邻兄弟选择器A+B{ }：只用于A后面一个同级元素(4)通用兄弟选择器A~B{ }：用于A后面所有的同级元素 结构伪类选择器：根据文档对象模型DOM的节点(元素级别)来操作。(1)B:first-child 作为父元素的第一个子元素B，作用和(3)相似(2)B:last-child 作为父元素的最后一个子元素B(3)A B:nth-child(n) 在父级中查第n个子元素是不是B，不分类型(4)B:first-of-type 选择父元素内B类型的第一个元素B(5)B:last-of-type 选择父元素内B类型的最后一个元素B(6)A B:nth-of-type(n) 在父级里先是不是B类型，再看位置n 属性选择器：(1)A[arrt] 选择包含属性arrt的A标签(也可写多个属性，但要同时存在)(2)A[arrt = val] 选择包含属性arrt,且属性值=val(区分大小写)的A标签(3)A[arrt ^= val] 选择包含属性arrt,且属性值以val开头的任意字符串(4)A[arrt $= val] 选择包含属性arrt,且属性值以val结尾的任意字符串(5)A[arrt *= val] 选择包含属性arrt,且属性值包含val字符串的A标签 CSS3美化网页CSS3设置文本样式：(1) span 标签：用来设置行内元素(或几个文字)的样式。(2)字体样式： 1234567font-size：常用单位pxfont-family：若同时设中英文字体，英文字体要设置在中文字体前面font-style：normal标准、italic斜体、oblique倾斜font-variant：small-caps; 字体设置为新型的大写字母，所有小写字母都转换为大写。font-weight：normal标准、bold粗、bolder更粗、lighter细、100-900数字越大越粗font：一次设置字体所有属性，顺序为\"字体风格-粗细-大小-类型\"如 font:italic bold 36px \"宋体\"; (3)用font简写方式至少要指定 font-size和 font-family 属性，其他的属性(如font-weight、font-style、font-variant、line-height)如未指定将使用默认值。缩写时 font-size 与 line-height中间要加”/“斜扛如 “12px/1.5em” Text-transform：控制文本的大小写：12345none 默认，定义既有小写字母也有大写字母的标准文本(原文)capitalize 每个单词以大写字母开头uppercase 全部为大写字母lowercase 全部小写字母inherit 从父元素继承text-transform属性的值。 direction属性：规定文本的方向/书写方向。ltr 文本方向从左到右 rtl 方向从右到左 inherit 继承父元素direction属性的值。文字排版(1)适用大多数浏览器： 从左向右 writing-mode: vertical-lr; 从右向左 writing-mode: vertical-rl; (2)只适用IE浏览器: 从左向右 writing-mode: tb-lr; 从右向左 writing-mode: tb-rl。 排版网页文本(1)color文本颜色: RGB：如color:#FF0000; 另一种方法rgb(r,g,b)其中三个参数取整0255 RGBA：在RGB基础上加控制alpha透明度的参数，取值01，0表示完全透明(2)text-align水平对齐: left左(默认)、center中间、right右、justify两端对齐(3)text-indent首行缩进：2em或2px 缩进两个字符(4)text-height文本行高: 单位px或 按倍数(行高是字体大小的倍数)(5)text-decoration文本装饰：none默认无、underline下划线、overline上划线、line-through删除线(6)vertical-align垂直对齐：只能作用于table表格单元格的对象: top顶、middle居中、bottom底(7)text-shadow文本阴影：语法”text-shadow:阴影颜色 x轴位移(x-offset) y轴位移(y-offset) 模糊半径(blur-radius);”如text-shadow: blue 10px 10ox 2px;(8)查询浏览器是否支持HTML5及CSS3属性的网址 www.caniuse.com CSS3设置超链接样式：伪类:根据标签处于某种行为或状态来修饰超链接样式。其他标签如p可以使用hover和active。语法”标签名:伪类名{声明;}”(1)a:link 未访问前的超链接(2)a:visited 访问过后(3)a:hover 鼠标移到链接上(4)a:link 鼠标点击未释放(5)设置伪类的顺序：a:link - a:visited - a:hover - a:active(6)虽有四种样式,但实际开发中只设置 a 标签选择器样式、鼠标悬浮链接样式 CSS3设置列表样式(1)list-style-type：列表项标记类型none无符号、decimal数字、disc实心圆(默认)、circle空心圆、square实心正方形(2)list-style-image：用图像做列表项标记(3)list-style-position：设置列表项标记的位置(4)list-style：一次设置列表的所有属性 (属性值为none时说明列表无样式)顺序为 list-style-type + list-style-position + list-style-image div 标签：用于网页布局，把HTML文档分成独立不同的部分。CSS3设置背景样式：(1)background-color：背景色不能继承，其默认值是透明transparent (2)background-image：url(图片路径)、none(不显示背景图像)(3)background-repeat：背景图像重复平铺repeat(沿水平和垂直方向)、no-repeat(不平铺,只显示一次)、repeat-x(只沿水平方向)、repeat-y(只沿垂直方向)、 (4)background-position：背景图的位置(X水平Y垂直方向的偏移量，如果只有一个方向关键字，则默认另一个关键字为center) 1.Xpos Ypos:如 0px 0px：默认无偏移,从左上角出现 30px 40px：正向偏移,图像向右和向下出现 -50px -60px：反向偏移,图像向左和向上出现 2.X% Y%：如30% 50%(水平方向偏移30%，垂直方向居中) 3.X水平关键词(left,center,right)、Y垂直关键词(top,center,bottom)(5)background：一次设置背景的所有属性(6)background-size背景图片尺寸：auto(保持图片原尺寸,不易失真)、cover(放大填满容器标签)、百分比percentage、contain(按照图片本身的宽高比例适应定义背景的区域) gradient线性渐变：颜色沿着一条直线方向过渡(1)常规语法：” linear-gradient(position, color1, color2,…)”(2)浏览器兼容语法：” -兼容前缀-linear-gradient(position,color1,color2,…)”(3)渐变的直线方向：to left 从右向左、to top left 向左上方、to bottom left 向左下方、to right 从左向右、to top right向右上方、to bottomo right向右下方、to bottom从上向下、to top 从下向上、 CSS3径向渐变radial-gradient：圆形渐变，颜色从一个起点朝所有方向混合，语法和线性渐变相似。盒子模型盒子模型的组成：content网页内容、border边框、padding内边距、margin外边距(1)边框border：border-color 边框颜色：如border-color:#369 #000 #111 #F00;按“上右下左顺时针”设置border-width 边框粗细：如细thin、中等medium、粗的thickborder-style 边框样式：常用none无边框、dotted点线边框、dashed虚线边框、solid实线边框border 简写:如下边框border-bottom:9px red dashed;四条边框border:9px blue solid;(2)margin外边距：盒子边框以外和其他盒子间的距离margin-top:上外边距、margin-bottom：下外边距margin-left：左外边距、margin-right：右外边距margin：简写”上右下左”auto：设置盒子在它的父容器里居中显示。如margin:0px auto;让整个盒子居中。如果将元素的 margin设为负值，则元素会变大。(块元素可以把左右页边距设置为”自动”中心对齐。margin:auto;但前提宽度不能是100%) 注意：很多标签都有自身默认的外边距，所以一般用并集选择器统一设置这些标签的外边距为0px,这样不会产生不必要的空隙。如清除body和h2自带的外边距 body,h2{margin:0px;} (3)padding内边距：padding-left、padding-right、padding-top、padding-bottom、padding”上右下左” 盒子模型的尺寸：增加边框、内边距、外边距后不会影响内容区域的尺寸，但会增加盒子模型的总尺寸。(1)内盒总尺寸 = border(上下/左右)+padding(上下/左右)+内容宽/高度(2)整个盒子的宽度 = 内容宽度+左右padding+左右边框border+左右margin box-sizing拯救布局(语法)box-sizing:content-box、border-box、inherit(1)content-box：盒子的宽度或高度=border+padding+(margin)+width/height(2)border-box：盒子的宽或高度等于元素内容的宽或高度 (即 该内容宽/高度=盒子宽/高度-border-padding )(3)inherit：使元素继承父元素的盒子模型模式。 border-radius圆角边框：语法和边框相似，只是四个边框带圆角(语法)border-radius:length{1~4个数字};(1)用border-radius制作特殊图形 圆形：元素的宽度和高度必须相同。圆角半径为元素宽度的一半，或直接设圆角半径为50% 半圆形：元素的高度是宽度的2倍，且圆角半径为元素的宽度值。 扇形：即制作四分之一圆形。”三同”元素宽度、高度、圆角半径 “一不同” 盒子阴影：和文本阴影相似(语法)box-shadow:inset x-offset y-offset blur-radius color;inset：内部阴影，可选。x-offset：X轴水平位移，正值在右，负值在左。y-offset：Y轴垂直位移，正值在下，负值在上。blur-radius：模糊半径可选，只能&gt;=0 值越大阴影向外面积越大,边缘越模糊。 浮动标准文档流：元素根据块元素或行内元素的特性从上到下，从左到右的方式自然排列。display属性：用于指定标签的显示方式block：块元素的默认值，该元素前后自带换行符 inline：行内元素的默认值，元素会显示为行内元素 inline-block：行内块元素，兼具行内元素和块元素的特性 none：元素不会显示Float：指定网页元素向哪个方向浮动left左、right右、none默认无(元素不浮动 显示在其文本出现的位置)元素的水平方向浮动，意味着元素只能左右移动而不能上下移动。一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。浮动元素之后的元素将围绕它。浮动元素之前的元素将不会受到影响。如果是右浮动，后面的文本流将环绕在它左边： clear清除浮动：当子元素全部浮动了，父级将包不住子元素会造成边框塌陷，所以要清除浮动元素对其他元素的影响。clear属性：规定元素的哪一侧不允许其他浮动元素。left(左侧不允许浮动元素)、right(右侧不允许)、 both(左右都不允许，常用于文本在图片下方显示)、 none(允许浮动元素出现在两侧)解决父级边框塌陷(1)浮动元素后加空的div，该div样式要设置clear:both;margin:0px;padding:0px;(2)设置父元素固定高度把边框撑开。(3)父级添加overflow属性:设置外层盒子的overflow:hidden。但此方法不能用于有下拉列表框的场景。(4)父级添加伪类after，推荐。 Overflow属性：溢出处理，也可用于扩展盒子高度。visible 默认溢出内容可见，显示在盒子外面(1) hidden 多出来的内容被隐藏且没有滚动条(2) scroll 有垂直水平2条滚动条，可查看多余内容(3) auto 如果内容溢出，自动显示滚动条(只有垂直条)查看(4) inherit 继承父特性 定位网页元素Position属性：指定盒子的位置，相对它父级的位置或它自身应该在的位置。(1)static 默认无定位，元素按照标准文档布局。(2)relative相对定位a.特性: 1.以标准文档流排版为基础，相当于它在原来位置偏移指定的距离。 2.元素位置偏移后，仍会保留原位置。 3.层级提高，可以遮盖标准文档流元素和浮动元素。b.使用场景： 相对定位可以不设偏移量，让后面的绝对定位以它为祖先元素作基准定位。c.语法 position:relative,指定偏移量时：水平left(正值向右移)、right(正值向左),垂直top(正值向下)、bottom(正值向上)。如 12345div&#123; position: relative; top:-20px; left:20px;&#125; (3)absolute绝对定位a.特性： 1.以已定位的祖先元素作基准定位，如果没有定位的祖先元素，则以浏览器窗口为基准定位。 2.元素位置偏移后，不保留原位置(其他元素可以用它原来的空位) 3.层级提高，可以遮盖标准文档流元素和浮动元素。 4.设置绝对定位的元素脱离文档流，对其他盒子的定位无影响b.使用场景：下拉菜单、焦点图轮播、弹出数字气泡、特别花边等。 (4)fixed固定定位a.特性：直接以浏览器窗口为基准定位，偏移位置不受窗口滚动条滚动的影响。b.使用场景：窗口边缘的固定广告、返回顶部图标、边缘固定导航栏等。 z-index属性：设置定位元素的堆叠顺序。默认值0，值大的层位于值小层的上方。(1)网页中的元素都含有两个堆叠层级，一个是未设置绝对定位时所处的环境，此时z-index是0；另一个是设置绝对定位时所处的堆叠环境，此时层的位置由z-index的值确定。 设置元素透明度的方法(通常两种方法搜设置以适应所有浏览器兼容)(1)opacity:x x值为01，值越小越透明(2)filter:alpha(opacity=x) x值为0100，值越小越透明 CSS3做网页动画transform变形：指效果的集合，如平移、旋转、缩放、倾斜效果。 语法 transform:[transform-function]*; 其中transform-function是变形函数，如要设置多个，则中间以空格分开。在用2D变形时要加浏览器兼容性前缀。 常用2D变形函数如下：(1)translate(tx,ty)：平移函数，将元素从原位置(基于X,Y坐标)移动到指定位置上。tx表示X轴(横坐标)上移动的向量长度，正值向右，负值向左。ty表示Y轴(纵坐标)上移动的向量长度，正值向下，负值向上。 (2)scale(sx,sy)：缩放函数，定义宽高度(元素尺寸)的缩放比例，默认值1。0~0.99缩小，大于1放大。sx表示宽度即横坐标方向的缩放量。sy表示高度即纵坐标方向的缩放量。 (3)rotate(a)；旋转函数，只取一个值为度数值,单位deg表示角度°正值顺时针转，负值逆时针转。rotate函数只旋转，不改变元素形状。 (4)skew(ax,ay)：倾斜函数，取值为度数值，单位degax表示水平方向即X轴的倾斜角度。ay表示垂直方向即Y轴的倾斜角度。 3D变形函数：translate3d()平移函数、scale3d()缩放函数、rotate3d()旋转函数transition过渡：指动画转换的过程，如渐现、渐弱、动画快慢等。通过指定属性的初始状态、结束状态，在两个状态间通过平滑过渡的方式实现动画。语法:[transition-property transition-duration transition-timing-function transition-delay]*(速记法)transition: 过渡属性 过渡用时 过渡的动画函数 过渡的延迟时间 主要包括四个属性值：(1)transition-property： 过渡属性，设置过渡或动态模拟的CSS属性(2)transition-duration： 过渡用时，从旧属性到新属性的用时，单位为s(3)transition-timing-function： 指定过渡函数、过渡速度,有以下方式： ease 速度由快到慢，逐渐变慢(默认) liner 匀速 ease-in 越来越快(渐显) ease-out 越来越慢(渐隐) ease-in-out 先加速再减速(渐显渐隐)(4)transition-delay：设置过渡是否延迟时间执行。注意：transition-duration指完成过渡需要的时间；transition-delay指过渡在什么时间之后触发。 总结如何用transition实现过渡动画：(1)在默认样式中声明元素的初始状态。(2)声明过渡元素之中状态样式，如悬浮状态(3)在默认样式中通过添加过渡函数，添加不同的样式。 过渡的触发机制：(1)伪类触发: :hover、 :active、 :focus、 :checked等(2)媒体查询：通过@media属性判断设备的尺寸、方向等。(3)JavaScript触发：用JavaScript脚本触发。 animation动画animation制作动画的步骤:(1)通过类似Flash动画的关键帧(@keyframes)声明一个动画；其中@keyframes称为关键帧，可以设置多段属性。语法 123456@keyframes 动画名称&#123;from&#123; //css样式代码 &#125;百分比1&#123; //css样式 &#125;百分比2&#123; //css样式 &#125;100%&#123; //css样式 &#125;&#125; (2)找到要设置动画的元素，调用关键帧已声明的动画。如 animation: spread(动画名) 2s linear(匀速); animation动画的语法和属性：“ animation: 动画名称 播放时间 播放方式 开始播放的时间 播放次数 播放方向 播放状态 动画时间之外的状态 “其中属性分别为： 12345678animation-name 动画名称、animation-duration 播放时间、animation-timing-function 播放方式、animation-delay 开始播放的时间、animation-iteration-count 播放次数(无限次用infinite)、animation-diriection 播放方向、animation-play-state 播放状态、animation-fill-mode 动画时间之外的状态、 其他HTML部分utf-8 和 utf8的使用只有MySQL可以用”utf8”，但其他地方一律使用大写”UTF-8”。网页推荐使用长后缀名.html 有的浏览器中直接输出中文会出现中文乱码，可加声明 12&lt;meta charset=\"UTF-8\"&gt;&lt;img src=\"地址\" alt=\"图片代替文字\" title=\"鼠标悬停提示\" width=\"\" height=\"\"/&gt; 超链接1.页面间链接：A页到B页 主要运用于网页导航 1&lt;a href=\"链接网址\" target=\"目标\"&gt;页面间链接&lt;/a&gt; 锚链接：A页甲位置到A页的乙位置或A页甲位置到B页的乙位置 # 跳其他页面要为href=”页面名.html#锚链接”12&lt;a name=wo&gt;&lt;/a&gt;&lt;a href=#wo&gt;锚链接&lt;/a&gt; 功能性链接：在页面中调用其他软件功能，如电子邮件&quot;mailto: @bdqn.cn&quot; qq msn1&lt;a href=\"mailto:bdqnWebmaster@bdqn.cn\" target=\"_blank\"&gt;功能性链接&lt;/a&gt; a 标签链接Email地址，使用mailto能发送电子邮件。如果mailto后面同时有多个参数，第一个参数必须以“?”开头，后面的参数每一个都以“&amp;”分隔。 1&lt;a href=\"mailto:xxx@qq.com?subject=主题名称 &amp;body=邮件内容\"&gt; title属性：鼠标滑过链接时显示该属性的内容。方便搜索引擎了解链接地址的内容1&lt;a href=\"目标网址\" title=\"鼠标滑过显示的文本\"&gt;链接显示的文本&lt;/a&gt; 超链接伪类：1234a:link 访问前a:visited 访问后a:hover 鼠标悬停a:active 鼠标选中未释放 创建表格： table ：整个表格以 table 标记开始、 /table标记结束，table在加css样式前不会显示表格线。 tbody ：如果不加 thead tbody tfooter , table表格加载完后才显示。加上这些表格结构， tbody包含行的内容下载完优先显示，不必等待表格结束后在显示，同时如果表格很长，用tbody分段，可以一部分一部分地显示。（通俗理解table 可以按结构一块块的显示，不用等整个表格加载完后显示。） tr：表格的一行，所以有几对tr 表格就有几行。 th：表格的头部的一个单元格，表格表头，文本默认粗体且居中显示。 td：表格的一个单元格，一行中包含几对 td 这行中就有几个单元格。 表格中列的个数，取决于一行中数据单元格的个数。 设置样式border-collapse:collapse;可以把双线边框线合并为一条线边框。12345&lt;table border=\"边距宽度\"&gt; &lt;tr&gt; &lt;td rowspan=\"跨行数量\" colspan=\"跨列数量\" align=\"文本状态\"&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 表格可以添加标题和摘要标签进行优化。(1)摘要： 1&lt;table summary=\"表格简介文本\"&gt; 摘要的内容不会在浏览器中显示。作用是增加表格的可读性(语义化)，使搜索引擎更好的读懂表格内容，还可以使屏幕阅读器更好的帮助特殊用户读取表格内容。(2)标题： caption描述表格内容，标题的显示位置：表格上方。语法： 1234&lt;table summary=\"表格简介\"&gt; &lt;caption&gt;标题&lt;/caption&gt; &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 内联框架iframe 1&lt;iframe&gt;&lt;/iframe&gt; 相关属性 src=”引用页面地址” name=”框架标识名” frameborder=”边框”scrolling=”是否出现滚动条” noresize=”noresize”更改页面大小用a targer=””配合iframe name=””可实现窗口间的关联 表单 1&lt;form method=\"提交方式\" action=\"提交地址\"&gt; 如果是文件域要在表单中加 enctype=”multipart/form=data” 属性隐藏域：type=”hidden”只读：readonly=”readonly”禁用：disabled=”disabled” 普通输入框 1&lt;input type=\"text\" name=\"名称\" size=\"长度\" maxlength=\"最大长度\"/&gt; radio单选按钮 1234&lt;input type=\"radio\" name=\"sex\" value=\"男\" id=\"nan\"/&gt;&lt;label for=\"nan\"&gt;男&lt;/label&gt;&lt;input type=\"radio\" name=\"sex\" value=\"女\" id=\"nv\"/&gt;&lt;label for=\"nv\"&gt;女&lt;/label&gt; checkbox多选按钮 1&lt;input type=\"checkbox\" name=\"\" value=\"1\"/&gt; 下拉列表 123&lt;select name=\"名称\"&gt; &lt;optoin value=\"值\"&gt;1&lt;/option&gt;&lt;/select&gt; 文本域textarea 1&lt;textarea rows=\"行数\" cols=\"列数\"&gt;文本&lt;/textarea&gt; 透明度 12opacity:(范围0~1) filter:aplha(opcitive&#x3D;透明度&lt;(100)&gt;); Location 对象的方法： 123.assign() &#x2F;&#x2F;加载新文档.reload() &#x2F;&#x2F;刷新当前文档.replace() &#x2F;&#x2F;用新文档替换当前文档 在网页中显示代码，当代码为一行时可用 code 包裹，多行代码用 pre 。 pre：预格式化，它包围的文本会保留空格和换行符 下拉列表进行多选操作：在 select 标签中设置multiple=”multiple”属性，就可以实现多选功能，在windows 操作系统下，进行多选时按下Ctrl键同时进行单击（在 Mac下使用 Command +单击），可以选择多个选项。 通用选择器匹配所有标签 *{ } 浏览器根据选择器权值来使用权值最高的css样式规则：标签的权值为1，类选择器的权值为10，ID选择器的权值为100。 !important有最高权值!important要写在分号的前面，但注意当网页制作者不设置css样式时，浏览器会按照自己的样式来显示网页。并且用户也可以在浏览器中设置自己习惯的样式，比如有的用户习惯把字号设置为大一些，使其查看网页的文本更加清楚。这时注意样式优先级为：浏览器默认的样式 &lt; 网页制作者样式 &lt; 用户自己设置的样式，但 !important优先级例外，权值高于用户自设置的样式。 什么是“置换元素”？置换元素会根据标签属性来显示的元素。反之就是非置换元素了。如img根据src属性来显示，input根据value属性显示，因此可知img和input是置换元素，同理textarea、 select也是置换元素。 段落排版： 12(1)letter-spacing：单个汉字间隔或单个字母间隔。(2)word-spacing：按单词来设置间隔。 1、border-style 边框样式：dashed（虚线）| dotted（点线）| solid（实线）2、border-color 边框颜色3、border-width 边框宽度：thin | medium | thick。常用像素(px)。4、当margin(或padding或border)的left和right的值相同，如：margin:10px 20px 30px 20px;缩写：margin:10px 20px 30px; 布局模型与盒模型都是 CSS概念。布局模型建立在盒模型基础上。在网页中，元素有三种布局模型：1、流动模型（Flow）流动（Flow）是默认的网页布局模式。特征：块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为100%。实际上，块状元素都会以行的形式占据位置。流动模型下，内联元素会在所处的包含元素内从左到右水平分布显示。 2、浮动模型 (Float)任何元素默认是不能浮动的，可用CSS定义为浮动。 3、层模型（Layer）让html元素在网页中精确定位，就像PhotoShop中的图层一样可以对每个图层能够精确定位操作。CSS定义了一组定位（positioning）属性来支持层布局模型。层模型有三种形式：(1)绝对定位(position: absolute)将元素从文档流中拖出来，然后用left、right、top、bottom属性相对最靠近它的一个带有定位属性的父包含块进行绝对定位。如果不存在这样的父包含块，则相对于body元素即相对于浏览器窗口。 (2)相对定位(position: relative)元素在正常文档流中的偏移位置。首先按static(float)方式生成一个元素(元素像层一样浮动了起来)，然后相对于以前的位置移动，移动的方向和幅度由left、right、top、bottom属性确定，偏移前的位置保留。 (3)固定定位(position: fixed)始终位于浏览器窗口内视图的设置位置，不受文档流动影响，另外属性background-attachment:fixed;的作用也是设置背景图片固定。 relative与absolute组合：1、参照定位的元素必须是相对定位元素的前辈元素。2、参照定位的元素必须加入position:relative。3、定位元素加入position:absolute，便可以使用top、bottom、left、right来进行偏移定位了。 设置颜色的方法：1、单词：p{color:red}2、RGB由 R(red)、G(green)、B(blue)三种颜色比例来配色。p{color:rgb(133,45,200)}每一项的值可以是 0255 的整数，也可以是0%100% 的百分数。如：p{color:rgb(20%,33%,25%)} 3、十六进制颜色其原理也是 RGB 设置，每一项的值由 0-255 变成了十六进制 00-ff。p{color:#00ffff;} 相对单位长度值：1、px像素像素指的是显示器上的小点(CSS规范中假设“90像素=1英寸”)。实际情况是浏览器和使用显示器的实际像素值有关。 2、em(1)元素给定字体的 font-size 值，如果元素的 font-size 为 14px，那么 1em = 14px；如果font-size 为18px，那么 1em = 18px。如 p{font-size:12px; text-indent:2em;}意思首行缩进 24px(即两个字体大小的距离) (2)当 font-size 设置为 em时，计算标准以它父元素的 font-size 为基础。如： 123&lt;p&gt;以这个&lt;span&gt;例子&lt;/span&gt;为例&lt;/p&gt; p&#123;font-size:14px&#125; span&#123;font-size:0.8em;&#125;这里 span 字体大小就为11.2px(14 * 0.8 = 11.2px) 3、%百分比 1p&#123;font-size:12px; line-height:130%&#125; 设置行高(行间距)为字体的130%（12 * 1.3 = 15.6px） 块状元素没有设置宽度时怎么居中? 1.加入 table 标签 2.设置 display: inline方法：显示类型设为行内元素，进行不定宽元素的属性设置 3.设置 position: relative 和 left:50%。利用相对定位，将元素从左偏移50%实现居中。 隐性改变display类型： position : absolute; float:left 或 float:right;不论什么元素(display:none除外)，设置以上属性之一，该元素的display显示类型就会自动变为 以display:inline-block(行内块状元素)方式显示，此时可设置元素的 width 和 height，且默认宽度不占满父元素。(如 a是行内元素，直接设置它的 width 无效，但设置 position:absolute 绝对定位后就可以设置宽度) 文本格式化标签： 1234567891011121314151617181920212223242526&lt;b&gt; 文本加粗&lt;strong&gt;文本加粗(加重语气)&lt;i&gt; 斜体字&lt;em&gt; 斜体(强调文字)&lt;big&gt; 字体放大&lt;small&gt; 字体缩小&lt;sub&gt; 定义下标字&lt;sup&gt; 定义上标字&lt;ins&gt; 插入字(字体下划线)&lt;del&gt; 字体删除线\"计算机输出\" 标签：&lt;code&gt; 定义计算机代码&lt;kbd&gt; 键盘输入&lt;samp&gt; 定义计算机代码样本&lt;var&gt; 定义变量&lt;pre&gt; 预格式化文本(会保留文本的多个空格)引文、引用、及标签定义：&lt;abbr&gt; 缩写&lt;address&gt; 地址联系信息&lt;bdo&gt; 文字方向(设置dir=\"rtl\"为从右到左显示)&lt;blockquote&gt; 长文本引用(不会自带双引号，但会两边自动缩进)&lt;q&gt; 短句引用语(自带双引号)&lt;cite&gt; 定义引用、引证&lt;dfn&gt; 定义一个定义项目。 title=””属性规定关于元素的额外信息。标签中加上title属性可实现鼠标移过时出现提示文字，如 1&lt;p title=\"提示\"&gt; base元素:描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接: 123&lt;head&gt; &lt;base href=\"//www.baidu.cn\" target=\"_blank\"/&gt; &lt;/head&gt; 提示：在HTML中，&lt;base&gt;标签没有结束标签。 HTML 颜色值RGB由红(R)、绿(G)、蓝(B)组成。每个颜色的最低值为0(十六进制为00)，最高值为255(十六进制为FF)。十六进制值写法：#号后加3个或6个十六进制字符。三位数表示法为：#RGB，转换为六位数表示为：#RRGGBB 常见的 URL Schemeshttp 超文本传输协议 以http开头的普通网页不加密https 安全超文本传输协议 https 加密所有信息交换ftp 文件传输协议 把文件上传或下载到网站file 本地计算机上的文件。 HTML5多媒体标签1234567&lt;embed&gt; 定义内嵌对象&lt;object&gt;定义内嵌对象&lt;param&gt; 定义对象的参数&lt;audio&gt; 定义声音内容&lt;video&gt; 定义视频或者影片&lt;source&gt;定义media元素的多媒体资源(&lt;video&gt;、&lt;audio&gt;)&lt;track&gt; 规定media元素的字幕文件或其他包含文本的文件 (&lt;video&gt;、&lt;audio&gt;) audio音频设置1.解决方法：下例使用两个不同的音频格式。HTML5 audio 元素会尝试以 mp3 或 ogg来播放音频。如果失败，代码将回退尝试 embed元素。 12345&lt;audio controls height=\"100\" width=\"100\"&gt; &lt;source src=\"horse.mp3\" type=\"audio/mpeg\"&gt; &lt;source src=\"horse.ogg\" type=\"audio/ogg\"&gt; &lt;embed height=\"50\" width=\"100\" src=\"horse.mp3\"&gt;&lt;/audio&gt; 2.雅虎播放器使用免费，提供一个小型的播放按钮。（1）如果使用它，要把这段JS插入网页底部： 1&lt;script src=\"http://mediaplayer.yahoo.com/latest\"&gt;&lt;/script&gt; （2）然后把MP3文件链接到页面中，JS会自动为每首歌创建播放按钮如： 123&lt;a href=\"音频路径\"&gt;音乐1&lt;/a&gt;&lt;a href=\"horse.mp3\"&gt;音乐2&lt;/a&gt;&lt;script src=\"http://mediaplayer.yahoo.com/latest\"&gt;&lt;/script&gt; 3.用超链接以下代码指向 mp3 文件链接。如果用户点击该链接，浏览器会启动”辅助应用程序”来播放该文件： 1&lt;a href=\"horse.mp3\"&gt;音乐1&lt;/a&gt; video视频播放设置1.最好的解决方法下例中使用了4种不同的视频格式。HTML 5 &lt;video&gt; 元素会尝试以 mp4、ogg、webm其中一种格式来播放视频。如果都失败，则回退到 &lt;embed&gt;元素。HTML5的source + object + embed。 12345678&lt;video width=\"320\" height=\"240\" controls&gt; &lt;source src=\"movie.mp4\" type=\"video/mp4\"&gt; &lt;source src=\"movie.ogg\" type=\"video/ogg\"&gt; &lt;source src=\"movie.webm\" type=\"video/webm\"&gt; &lt;object data=\"movie.mp4\" width=\"320\" height=\"240\"&gt; &lt;embed src=\"movie.swf\" width=\"320\" height=\"240\"&gt; &lt;/object&gt; &lt;/video&gt; 2.优酷解决方案如果要在网页中播放视频，可把视频上传到优酷等视频网站，然后在你的网页中插入 HTML代码即可播放视频： 1234 &lt;embed src=\"http://player.youku.com/player.php/sid/XMzI2NTc4NTMy/v.swf\" width=\"480\" height=\"400\" type=\"application/x-shockwave-flash\"&gt;&lt;/embed&gt; 3.使用超链接如果网页包含指向媒体文件的超链接，大多数浏览器会使用”辅助应用程序”来播放文件。以下代码指向 AVI文件的链接。如果用户点击该链接，浏览器会启动”辅助应用程序”如 Windows Media Player 来播放该 AVI 文件： 1&lt;a href=\"https://www.xxx.com/html/intro.swf\"&gt;播放该视频&lt;/a&gt; HTML中如何键入空格？1.用空格占位符 &amp;nbsp;但&amp;nbsp有不间断的特性。即连续的&amp;nbsp会在同一行内显示。即使有多个&amp;nbsp，浏览器也不会把它们回车拆行。 2.段落间距&lt;p&gt;、换行&lt;br/&gt;3.用JS动态给HTML添加空格：例为照顾CSS样式或照顾特殊效果的实现。如果你不单单想让div之间是null，而是想动态添加空格的话，这样(jquery): 1234$(&quot;#id&quot;).innerHTML +&#x3D; &quot; &quot;;display: none; 元素不显示也不会占位visibility: hidden; 元素只是隐藏但仍然占位置visibility: collapse; 隐藏但不占空间，类似display:none; clip 剪辑一个绝对定位的元素。clip : rect(top, right, bottom, left); CSS 伪类：1.Anchor伪类 (伪类如:link冒号和伪类名之间不能有空格)12345在支持 CSS 的浏览器中，链接的不同状态可用不同的方式显示：a:link &#123;color:#FF0000;&#125; /* 未访问的链接 */ a:visited &#123;color:#00FF00;&#125; /* 已访问的链接 */ a:hover &#123;color:#FF00FF;&#125; /* 鼠标划过链接 */ a:active &#123;color:#0000FF;&#125; /* 已选中的链接 */ 2.CSS类和伪类配合使用：12345678910p : first-child&#123; &#125; 匹配父级中第一个&lt;p&gt;子元素p &gt; i:first-child&#123; &#125; 匹配所有&lt;p&gt;元素的第一个 &lt;i&gt; 子元素p:first-child i&#123; &#125; 匹配第一个&lt;p&gt;元素中的所有 &lt;i&gt; 元素White-space属性：设置如何处理元素内的空白。normal 默认。空白会被浏览器忽略。pre 空白会被浏览器保留。其行为方式类似 &lt;pre&gt;标签。nowrap 文本不会换行，文本在同一行上继续，直到遇到&lt;br/&gt;为止。pre-wrap 保留空白符序列，但是正常地进行换行。pre-line 合并空白符序列，但是保留换行符。inherit 从父元素继承 white-space 属性的值。 浏览器兼容前缀：12345-moz- 火狐等使用 Mozilla内核的浏览器-webkit- 谷歌、Safari等使用 Webkit内核的浏览器-o- Opera浏览器，使用Blink内核-ms- IE，使用 Trident内核viewport 是用户网页的可视区域。 注：本文非原创，如有侵权。请联系本人删除。","categories":[{"name":"编程","slug":"编程","permalink":"https://www.yichen.online/categories/%E7%BC%96%E7%A8%8B/"},{"name":"技术","slug":"编程/技术","permalink":"https://www.yichen.online/categories/%E7%BC%96%E7%A8%8B/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Html","slug":"Html","permalink":"https://www.yichen.online/tags/Html/"},{"name":"css","slug":"css","permalink":"https://www.yichen.online/tags/css/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"https://www.yichen.online/categories/%E7%BC%96%E7%A8%8B/"},{"name":"技术","slug":"编程/技术","permalink":"https://www.yichen.online/categories/%E7%BC%96%E7%A8%8B/%E6%8A%80%E6%9C%AF/"}]},{"title":"学生通讯录管理系统","slug":"通讯录管理系统","date":"2019-12-14T13:43:16.898Z","updated":"2020-06-08T15:33:16.998Z","comments":true,"path":"2019/12/14/通讯录管理系统/","link":"","permalink":"https://www.yichen.online/2019/12/14/%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/","excerpt":"设计要求问题描述&nbsp; 纸质的通讯录系统已经不能满足大家的要求，容易丢失、查找困难等问题是纸质通讯录所不能克服的缺点。“学生通讯管理系统”是为了帮助老师、同学，或者其他一些需要使用通讯录的人员进行管理和分析的一种应用程序。","text":"设计要求问题描述&nbsp; 纸质的通讯录系统已经不能满足大家的要求，容易丢失、查找困难等问题是纸质通讯录所不能克服的缺点。“学生通讯管理系统”是为了帮助老师、同学，或者其他一些需要使用通讯录的人员进行管理和分析的一种应用程序。 需求分析 输入数据建立通讯录 查询通讯录系统中满足要求的信息 插入新的通讯录信息 删除不需要的通讯录信息 查看所有通讯录信息 概要设计主界面设计&nbsp; 为了实现学生通讯录管理系统各功能的管理，设计一个含有多个菜单项的主控菜单子程序以链接系统的各项子功能，方便用户使用本系统。本系统主控菜单运行界面如图所示。 存储结构设计&nbsp; 本系统主要采用链表结构类型来表示存储在“学生通讯录管理系统”中的信息。其中，链表结点由四个分量构成；通讯录成员学号、通讯录成员姓名、通讯录成员电话号码、指向该结构体的指针。 系统功能设计本系统设置了5个子功能菜单，5个子功能的设计描述如下。 建立通讯录系统。可以一次输入多个成员通讯录的信息，建立通讯录。 插入通讯记录。每次可以插入一个成员通讯录的信息。如果要连续插入多个成员通讯录信息必须多次选择该功能。 查询通讯记录。可以按两种方式查询所需要的通讯录成员记录，一是按学号查询，二是按姓名查询。 删除通讯记录。可以对通讯录中不再需要的信息进行删除。 显示通讯录系统。可以查看通讯录中所有的通讯录成员记录。 程序代码include &lt;stdio.h&gt;# include &lt;stdlib.h&gt;# include &lt;string.h&gt;typedef struct student //定义学生结点&#123; char name[20]; //姓名 int num; //学号 char phone[20]; //电话 struct student *next;&#125;stud;void Menu() //菜单&#123; printf(\"\\n\\n\\n\"); printf(\"***********************班级通讯录管理系统***********************\\n\\n\"); printf(\" 1.建立通讯录 \\n\\n\"); printf(\" 2.添加通讯录 \\n\\n\"); printf(\" 3.删除通讯录 \\n\\n\"); printf(\" 4.查询通讯录 \\n\\n\"); printf(\" 5.显示通讯录 \\n\\n\"); printf(\" 0.退出系统 \\n\\n\"); printf(\"****************************************************************\\n\");&#125;void Init(stud *H) //初始化&#123; H-&gt;next=NULL;&#125;void Input(stud *H) //输入&#123; int n; stud *p, *q; p=H; while(p-&gt;next) &#123; p=p-&gt;next; //p指向链表的最后一个结点 &#125; while(true) &#123; q=(stud *)malloc(sizeof(stud)); //申请空间 q-&gt;next = NULL; printf(\"请输入学生信息：\\n\"); printf(\"姓名：\"); scanf(\"%s\", &amp;q-&gt;name); printf(\"\\n\"); printf(\"学号：\"); scanf(\"%d\", &amp;q-&gt;num); printf(\"\\n\"); printf(\"电话：\"); scanf(\"%s\", &amp;q-&gt;phone); printf(\"\\n\"); p-&gt;next=q; p=q;// system(\"cls\"); //清屏 printf(\"是否接着输入：1(继续)/0(结束)\\n\"); scanf(\"%d\", &amp;n); if(n==0) break; &#125;&#125;void Output(stud *H) //显示输出&#123;// system(\"cls\"); stud *p; p = H-&gt;next; if(!p) &#123; printf(\"\\n没有学生记录!!!\\n\"); return ; &#125; printf(\"姓名 学号 电话\\n\"); while(p) //输出学生记录 &#123; printf(\"%s %d %s\\n\", p-&gt;name, p-&gt;num,p-&gt;phone); p=p-&gt;next; &#125;&#125;void Findm(stud *H) //查询姓名 &#123;// system(\"cls\"); char str[20]; bool f=false; stud *p; p=H-&gt;next; printf(\"请输入姓名：\\n\"); scanf(\"%s\", str); if(!p) &#123; printf(\"没有符合条件的学生记录！\\n\"); return ; &#125; printf(\"姓名 学号 电话\\n\"); while(p) &#123; if(strcmp(str, p-&gt;name)==0) //找到了一条符合条件的记录 &#123; f=true; printf(\"%s %d %s\\n\", p-&gt;name, p-&gt;num,p-&gt;phone); &#125; p=p-&gt;next; &#125; if(!f) &#123; printf(\"没有符合条件的学生记录！\\n\"); &#125;&#125;void Findh(stud *H) //查询学号 &#123;// system(\"cls\"); char str; bool f=false; stud *p; p=H-&gt;next; printf(\"请输入学号：\\n\"); scanf(\"%d\", str); if(!p) &#123; printf(\"没有符合条件的学生记录！\\n\"); return ; &#125; printf(\"姓名 学号 电话\\n\"); while(p) &#123; if(str==p-&gt;num) //找到了一条符合条件的记录 &#123; f=true; printf(\"%s %d %s\\n\", p-&gt;name, p-&gt;num, p-&gt;phone); &#125; p=p-&gt;next; &#125; if(!f) &#123; printf(\"没有符合条件的学生记录！\\n\"); &#125;&#125;void Find(stud *H) //查询 &#123; int select;// system(\"cls\"); printf(\"*************************查询**************************************\\n\\n\"); printf(\" 1.按姓名 \\n\\n\"); printf(\" 2.按学号 \\n\\n\"); printf(\" 0.退出 \\n\\n\"); printf(\"*******************************************************************\\n\\n\"); while(true) &#123; printf(\"请选择（0-2）\"); scanf(\"%d\",&amp;select); if(select&gt;=0&amp;&amp;select&lt;3) break; &#125; switch(select) &#123;// case 0: return 0; break; case 1: Findm(H); break; case 2: Findh(H); break; &#125;&#125;void Del(stud *H)//删除学生信息&#123; char str[20]; printf(\"\\n请输入要删除记录的姓名：\\n\"); scanf(\"%s\", str); stud *p, *q; p=H; q=H-&gt;next; bool flag=false; while(q) &#123; if(strcmp(q-&gt;name, str)==0) &#123; flag=true; p-&gt;next=q-&gt;next; q=p-&gt;next;break; &#125; p=q; q=q-&gt;next; &#125; printf(\"\\n删除成功！！\\n\"); printf(\"\\n\\n删除成功后的学生通讯信息：\\n\"); Output(H); &#125;void Add(stud *H) //添加学生信息&#123; int n; stud *p, *q; p=H; while(p-&gt;next) //p指向链表的最后一个结点 &#123; p=p-&gt;next; &#125; while(true) &#123; q=(stud *)malloc(sizeof(stud)); //申请空间 q-&gt;next = NULL; printf(\"\\n请输入添加学生的信息：\\n\"); printf(\"姓名：\"); scanf(\"%s\", &amp;q-&gt;name); printf(\"\\n\"); printf(\"学号：\"); scanf(\"%d\", &amp;q-&gt;num); printf(\"\\n\"); printf(\"电话：\"); scanf(\"%s\", &amp;q-&gt;phone); printf(\"\\n\"); p-&gt;next=q; p=q;// system(\"cls\"); //清屏 printf(\"是否继续添加：1(继续)/0(结束)\\n\"); scanf(\"%d\", &amp;n); if(n==0) break; &#125; printf(\"\\n添加成功！\\n\"); printf(\"\\n\\n添加成功后的学生通讯信息：\\n\"); Output(H); &#125;int main()&#123; stud *H; H = (stud *)malloc(sizeof(stud)); //注意，申请空间的时候最好是在主函数中申请 Init(H); //初始化，申请一个头结点 bool flag; int select, m; while(true) &#123; Menu(); printf(\"请输入(0-5):\\n\"); flag=true; while(flag) &#123; flag=false; scanf(\"%d\", &amp;select); if(select&lt;0 || select&gt;5) &#123; printf(\"输入不正确，请重新输入(0-5):\\n\"); flag=true; &#125; &#125; switch(select) &#123; case 0: return 0; break; case 1: Input(H); break; case 2: Add(H); break; case 3: Del(H); break; case 4: Find(H); break; case 5: Output(H); break; &#125; printf(\"\\n请选择:1(继续)/0(结束)\\n\"); scanf(\"%d\", &amp;m); if(m==0) return 0;// system(\"cls\"); //清屏 &#125; return 0;&#125; 微信公众号","categories":[{"name":"编程","slug":"编程","permalink":"https://www.yichen.online/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"C语言","slug":"C语言","permalink":"https://www.yichen.online/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"学生通讯录管理系统","slug":"学生通讯录管理系统","permalink":"https://www.yichen.online/tags/%E5%AD%A6%E7%94%9F%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"https://www.yichen.online/categories/%E7%BC%96%E7%A8%8B/"}]},{"title":"Html 初学笔记","slug":"认识HTML","date":"2019-12-05T15:20:26.134Z","updated":"2020-06-29T15:13:10.251Z","comments":true,"path":"2019/12/05/认识HTML/","link":"","permalink":"https://www.yichen.online/2019/12/05/%E8%AE%A4%E8%AF%86HTML/","excerpt":"认识Html 超文本编辑语言（Hyper Text Markup Language）是Internet上用来编写网页的主要语言。html是一种描述性标记语言，用来描述页面内容的显示方式；以HTML语言为主编写的HTML是一种纯文本文件，以 .html或.htm为后缀。","text":"认识Html 超文本编辑语言（Hyper Text Markup Language）是Internet上用来编写网页的主要语言。html是一种描述性标记语言，用来描述页面内容的显示方式；以HTML语言为主编写的HTML是一种纯文本文件，以 .html或.htm为后缀。 【语法】123&lt;标签&gt; 内容&lt;&#x2F;标签&gt; 其中： 标签通常都是成对出现，有开始的&lt;标签&gt;，有对应的结束的&lt;/标签&gt;。 内容是一些纯文本文字或标签。 HTML元素指的是从开始标签到结束标签的所有代码。 【title元素】123&lt;title&gt; 一个简单的页面&lt;/title&gt; HTML文档具体结构： 在HTML文件的第一行中，使用&lt;!DOCTYPE&gt;标签来指定文档类型定义，&lt;!DOCTYPE&gt;标签需放在所有文档标签之前，用于说明文档使用的HTML或XHTML的特定版本，并告诉浏览器后续内容应依照什么方式来进行解析。 HTML文档结构是由&lt;html&gt;&lt;head&gt;&lt;body&gt;三大元素组成。 html元素：HTML文档是以&lt;html&gt;标签开始，以&lt;/html&gt;标签结束。文档的所有内容都需要放在这两个标签之间。 head元素：页面头部信息用于像浏览器提供整个页面的基本信息，但不包括页面的主体内容。头部信息主要包括页面的标题、元信息、CSS样式、JavaScript脚本等元素。 body元素：网页的正文，用户在浏览器主体窗口中看到的信息，包括图片、表格、段落、视频等内容，且须位于&lt;body&gt;标签之内。 【实例代码】1234567891011&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt; 第一个网页 &lt;/title&gt;&lt;/head&gt; &lt;body&gt; hello world ! &lt;/body&gt;/html&gt; 【实例效果】","categories":[{"name":"学习之路","slug":"学习之路","permalink":"https://www.yichen.online/categories/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"}],"tags":[{"name":"Html","slug":"Html","permalink":"https://www.yichen.online/tags/Html/"}],"keywords":[{"name":"学习之路","slug":"学习之路","permalink":"https://www.yichen.online/categories/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"}]},{"title":"C++用类写友元","slug":"filename-C++","date":"2019-06-13T12:36:13.145Z","updated":"2020-06-08T15:24:09.254Z","comments":true,"path":"2019/06/13/filename-C++/","link":"","permalink":"https://www.yichen.online/2019/06/13/filename-C++/","excerpt":"声明Book与Ruler两个类，二者都有weight属性，定义二者的一个友元函数totalWeight（），计算二者的重量和。","text":"声明Book与Ruler两个类，二者都有weight属性，定义二者的一个友元函数totalWeight（），计算二者的重量和。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include&lt;iostream&gt;using namespace std;class Ruler;class Book&#123; private: int weight1; friend void totalWeight(Book &amp;b,Ruler &amp;r); public: void init();&#125;;void Book::init()&#123; cout&lt;&lt;\"请输入书的重量：\"&lt;&lt;endl; cin&gt;&gt;weight1;&#125;class Ruler&#123; private: int weight2; friend void totalWeight(Book &amp;b,Ruler &amp;r); public: void init();&#125;;void Ruler::init()&#123; cout&lt;&lt;\"请输入尺子的重量：\"&lt;&lt;endl; cin&gt;&gt;weight2;&#125;void totalWeight(Book &amp;b,Ruler &amp;r)&#123; cout&lt;&lt;\"二者的重量和为：\"&lt;&lt;b.weight1+r.weight2&lt;&lt;endl; &#125; int main()&#123; Book book; Ruler ruler; book.init(); ruler.init(); totalWeight(book,ruler); return 0;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"https://www.yichen.online/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://www.yichen.online/tags/C/"},{"name":"友元","slug":"友元","permalink":"https://www.yichen.online/tags/%E5%8F%8B%E5%85%83/"}],"keywords":[{"name":"编程","slug":"编程","permalink":"https://www.yichen.online/categories/%E7%BC%96%E7%A8%8B/"}]},{"title":"C语言写友好函数","slug":"filename","date":"2019-05-16T15:38:44.530Z","updated":"2020-06-08T15:24:27.744Z","comments":true,"path":"2019/05/16/filename/","link":"","permalink":"https://www.yichen.online/2019/05/16/filename/","excerpt":"写函数，以两个正整数为参数，如果该两数是友好的，返回t，否则返回f。如果这两个每个的约数和（除了本身以外）等于对方整数，则称这对数是友好的。（例如：1184的约数和有：1+2+4+8+16+32+37+74+148+296+592=1210；1210的约数和有：1+2+5+10+11+22+55+110+121+242+605=1184。这对数是友好的。）","text":"写函数，以两个正整数为参数，如果该两数是友好的，返回t，否则返回f。如果这两个每个的约数和（除了本身以外）等于对方整数，则称这对数是友好的。（例如：1184的约数和有：1+2+4+8+16+32+37+74+148+296+592=1210；1210的约数和有：1+2+5+10+11+22+55+110+121+242+605=1184。这对数是友好的。） 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int facsum(int n)&#123; int x=0; for(int i=1;i&lt;n;i++) if (n%i==0) x+=i; return x;&#125;int main()&#123; int m,n; printf(\"请输入两个整数:\\n\"); scanf(\"%d %d\",&amp;m,&amp;n); if (facsum(n)==m&amp;&amp;facsum(m)==n) &#123; printf(\"%d和%d是友元\\n\",m,n); &#125; else &#123; printf(\"%d和%d不是友元\\n\",m,n); &#125; return 0;&#125;","categories":[{"name":"学习之路","slug":"学习之路","permalink":"https://www.yichen.online/categories/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"}],"tags":[{"name":"C语言","slug":"C语言","permalink":"https://www.yichen.online/tags/C%E8%AF%AD%E8%A8%80/"}],"keywords":[{"name":"学习之路","slug":"学习之路","permalink":"https://www.yichen.online/categories/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"}]}]}